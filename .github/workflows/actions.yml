name: NET Nuget CI

on:
  push:    
  pull_request:
    branches: [ master, develop ]

jobs:
  Init:
    runs-on: ubuntu-latest
    name: Init Variables
    steps:
      - name: Variables
        run: |
            echo GITHUB_WORKFLOW:  ${{ github.WORKFLOW }}
            echo GITHUB_RUN_ID     ${{ github.RUN_ID }}
            echo GITHUB_RUN_NUMBER ${{ github.RUN_NUMBER }}
            echo GITHUB_JOB        ${{ github.JOB }}
            echo GITHUB_ACTION     ${{ github.ACTION }}
            echo GITHUB_ACTION_PATH${{ github.ACTION_PATH }}
            echo GITHUB_ACTIONS    ${{ github.ACTIONS }}
            echo GITHUB_ACTOR      ${{ github.ACTOR }}
            echo GITHUB_REPOSITORY ${{ github.REPOSITORY }}
            echo GITHUB_EVENT_NAME ${{ github.EVENT_NAME }}
            echo GITHUB_EVENT_PATH ${{ github.EVENT_PATH }}
            echo GITHUB_WORKSPACE  ${{ github.WORKSPACE }}
            echo GITHUB_SHA        ${{ github.SHA }}
            echo GITHUB_REF        ${{ github.REF }}
            echo GITHUB_HEAD_REF   ${{ github.HEAD_REF }}
            echo GITHUB_BASE_REF   ${{ github.BASE_REF }}
            echo GITHUB_SERVER_URL ${{ github.SERVER_URL }}
            echo GITHUB_API_URL    ${{ github.API_URL }}
            echo GITHUB_GRAPHQL_URL${{ github.GRAPHQL_URL }}
            echo RUNNER_OS         ${{ runner.OS }}
            echo RUNNER_TEMP       ${{ runner.TEMP }}
            echo RUNNER_TOOL_CACHE ${{ runner.TOOL_CACHE }}
  
  Build_and_Upload_Artefact_To_Nuget:
    needs: Init
    runs-on: ubuntu-latest
    name: Build And Upload Artefact To Nuget NET
    env:
        APP_NAME: DummyCoreNet        
    steps:
      - name: Git Checkout Repository
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:            
            source-url: https://nuget.pkg.github.com/luismartinezpage/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.UPLOAD_PACKAGE_TOKEN }}
      
      - name: Build application
        run: dotnet build ${{ env.APP_NAME }} --configuration Release

      - name: Create the package
        run: dotnet pack --configuration Release ${{ env.APP_NAME }}
      
      - name: Publish the package
        run: |
          dotnet nuget push ${{ env.APP_NAME }}/bin/Release/*.nupkg